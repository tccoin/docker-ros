FROM arm64v8/ros:noetic-perception

###
### PROXY
###

ENV HTTP_PROXY="http://192.168.0.187:10809"
ENV HTTPS_PROXY="http://192.168.0.187:10809"
ENV http_proxy="http://192.168.0.187:10809"
ENV https_proxy="http://192.168.0.187:10809"

RUN sudo touch /etc/apt/apt.conf.d/proxy.conf \ 
    && sudo echo "Acquire::http::Proxy \"http://192.168.0.187:10809\";" > /etc/apt/apt.conf.d/proxy.conf \ 
    && sudo echo "Acquire::http::Proxy \"http://192.168.0.187:10809\";" >> /etc/apt/apt.conf.d/proxy.conf \ 
    && sudo cat /etc/apt/apt.conf.d/proxy.conf

###
### VNC
###

RUN add-apt-repository -y ppa:fcwu-tw/apps \
    && apt update \
    && apt install -y --no-install-recommends --allow-unauthenticated \
    xvfb x11vnc=0.9.13-3 x11vnc-data=0.9.13-3 \
    vim-tiny firefox chromium-browser ttf-ubuntu-font-family ttf-wqy-zenhei \
    lxde gtk2-engines-murrine gnome-themes-standard gtk2-engines-pixbuf gtk2-engines-murrine arc-theme

# tini for subreap
ARG TINI_VERSION=v0.18.0
ADD https://github.com/krallin/tini/releases/download/${TINI_VERSION}/tini-arm64 /bin/tini
RUN chmod +x /bin/tini

###
### Development Tools
###

WORKDIR /root/ws
ENV HOME=/root

RUN echo "deb http://packages.ros.org/ros/ubuntu trusty main" > /etc/apt/sources.list.d/ros-latest.list
RUN apt-key adv --keyserver "hkp://ha.pool.sks-keyservers.net" --recv-key "0xB01FA116" \
    || { wget "https://raw.githubusercontent.com/ros/rosdistro/master/ros.key" -O - | sudo apt-key add -; }
RUN sh -c 'echo "deb http://packages.ros.org/ros/ubuntu `lsb_release -cs` main" > /etc/apt/sources.list.d/ros-latest.list' \ 
    && apt-key adv --keyserver 'hkp://keyserver.ubuntu.com:80' --recv-key C1CF6E31E6BADE8868B172B4F42ED6FBAB17C654

# install build dependency
RUN sed -i "/^# deb.*multiverse/ s/^# //" /etc/apt/sources.list \ 
    && apt-get update \ 
    && apt-get install --no-install-recommends -y \
    apt-utils \
    wget \
    ca-certificates \
    git \
    sudo \
    nano \
    less \
    ros-${ROS_DISTRO}-ros-base \
    ros-${ROS_DISTRO}-catkin \
    build-essential \
    python3-colcon-common-extensions \
    python3-catkin-tools \
    python3-osrf-pycommon \
    python3-rosdep \
    python3-wstool \
    ros-${ROS_DISTRO}-catkin

WORKDIR /root/build

# install tilix
RUN sudo apt-get install -y \
    tilix

# install zsh
RUN git clone https://github.com/tccoin/easy-linux.git \
    && cd easy-linux \
    && ./zsh.sh \
    && touch /root/.z \
    && rm /root/.zshrc

# ADD src/.zshrc /root

# install gitstatus
# https://github.com/romkatv/gitstatus/releases/tag/v 1.3.1
RUN mkdir -p /root/.cache/gitstatus \
    && wget https://github.com/romkatv/gitstatus/releases/download/v1.3.1/gitstatusd-linux-aarch64.tar.gz -O - \
    | tar -zx -C /root/.cache/gitstatus/

# install conda
RUN wget https://github.com/conda-forge/miniforge/releases/latest/download/Miniforge3-Linux-aarch64.sh -O ~/miniconda.sh \
    && bash ~/miniconda.sh -b -p $HOME/miniconda \
    && rm ~/miniconda.sh

###
### Program Dependency
###

WORKDIR /root/build

RUN wget https://github.com/tccoin/container-static-files/releases/download/Galaxy_Linux/Galaxy_Linux-armhf_Gige-U3_32bits-64bits_1.3.1911.9271.tar.gz -O - \
    | tar -zx \
    && cd Galaxy_Linux-armhf_Gige-U3_32bits-64bits_1.3.1911.9271/ \
    && echo '\n' | ./Galaxy_camera.run

RUN wget https://github.com/tccoin/container-static-files/releases/download/Galaxy_Linux/Galaxy_Linux_Python_2.0.2008.9111.tar.gz -O - \
    | tar -zx

WORKDIR /root

SHELL ["/bin/bash", "-l", "-c"]

RUN mkdir -p catkin_ws/src \
    && cd catkin_ws \
    && git clone https://github.com/tccoin/galaxy_camera.git src/galaxy_camera \
    && source /opt/ros/noetic/setup.bash \
    && catkin_make

RUN PATH="$HOME/miniconda/bin:$PATH" conda install -y opencv numpy python=3.7

RUN /root/miniconda/bin/pip3 install opencv-contrib-python pyserial toolz

RUN cd ~/build/Galaxy_Linux_Python_2.0.2008.9111/api/ \
    && /root/miniconda/bin/pip3 install .

RUN apt-get install -y ros-noetic-rqt ros-noetic-rqt-common-plugins

ENTRYPOINT ["/bin/zsh"]